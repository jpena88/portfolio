<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terraform on jpena.io</title>
    <link>https://jpena.io/tags/terraform/</link>
    <description>Recent content in terraform on jpena.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jpena.io/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploy Prisma to AWS Fargate with Terraform</title>
      <link>https://jpena.io/posts/my-first-post/</link>
      <pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jpena.io/posts/my-first-post/</guid>
      <description>A recent project that I worked on introduced Prisma to our stack, an ORM-like layer that does the heavy lifting in your GraphQL server. Rather than diving deep into what Prisma is and how it operates, this post will guide you through using Terraform to automate &amp;amp; deploy the entire stack — The Prisma server &amp;amp; the AWS resources needed to support it.
If you prefer using CloudFormation for IaaC, you’re in luck!</description>
    </item>
    
  </channel>
</rss>